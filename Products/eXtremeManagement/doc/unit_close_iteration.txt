
    >>> class Mock(object):
    ...     def __init__(self, **kwargs):
    ...         self.__dict__.update(kwargs)
    >>> class MockFolder(object):
    ...     def __init__(self, contents=[], uid=None):
    ...         self.uid = uid
    ...         self.contents = contents
    ...     def UID(self):
    ...         return self.uid
    ...     def getFolderContents(self, *args, **kwargs):
    ...         return self.contents

    >>> from zope.component import provideAdapter
    >>> from zope.interface import Interface
    >>> project = MockFolder(
    ...     [Mock(Title='Iteration1',
    ...           getURL=lambda: 'http://somehost.com/iteration1',
    ...           UID='Iteration1'),
    ...      Mock(Title='Iteration2',
    ...           getURL=lambda: 'http://somehost.com/iteration2',
    ...           UID='Iteration2')])
    >>> class MockState(object):
    ...     def __init__(self, context, request):
    ...         self.project = project
    >>> provideAdapter(MockState, (MockFolder, Mock), Interface,
    ...                u'xm_global_state')

    >>> context = MockFolder(
    ...     [Mock(Title='Story1',
    ...           getURL=lambda: 'http://somehost.com/story1'),
    ...      Mock(Title='Story2',
    ...           getURL=lambda: 'http://somehost.com/story2')],
    ...     'Iteration1')

    >>> from Products.eXtremeManagement.browser.closing import IterationClosingView
    >>> view = IterationClosingView(context, Mock())
    >>> [x['title'] for x in view.pending_stories]
    ['Story1', 'Story2']

    >>> [x['title'] for x in view.target_iterations]
    ['Iteration2']

    >>> 1+1
    1
